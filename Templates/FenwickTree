{
	"": {
	"prefix": "fenwicktree",
	"body": [
		"struct FenwickTree {",
		"    int size;",
		"    std::vector<long long> bit;",
		"",
		"    FenwickTree(int n) {",
		"        size = n;",
		"        bit.assign(n + 1, 0);",
		"    }",
		"",
		"    //Add val at position idx",
		"    void update(int idx, long long val) {",
		"        while (idx <= size) {",
		"            bit[idx] += val;",
		"            idx += idx & -idx;",
		"        }",
		"    }",
		"",
		"    //Get sum from 1 to idx",
		"    long long query(int idx) const {",
		"        long long result = 0;",
		"        while (idx > 0) {",
		"            result += bit[idx];",
		"            idx -= idx & -idx;",
		"        }",
		"        return result;",
		"    }",
		"",
		"    //Get sum from l to r",
		"    long long range_query(int l, int r) const {",
		"        return query(r) - query(l - 1);",
		"    }",
		"",
		"    //Set value at idx to val",
		"    void set(int idx, long long val) {",
		"        long long current = range_query(idx, idx);",
		"        update(idx, val - current);",
		"    }",
		"};"
	],
	"description": ""
	}
}