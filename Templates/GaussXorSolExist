bool gaussXor(vector<vector<int>>& A, vector<int>& b, int n) {
    int m = A[0].size();
    int row = 0;
    for (int col = 0; col < m && row < n; ++col) {
        int pivot = row;
        while (pivot < n && A[pivot][col] == 0) pivot++;
        if (pivot == n) continue;

        swap(A[pivot], A[row]);
        swap(b[pivot], b[row]);

        for (int i = 0; i < n; ++i) {
            if (i != row && A[i][col]) {
                for (int j = col; j < m; ++j)
                    A[i][j] ^= A[row][j];
                b[i] ^= b[row];
            }
        }
        row++;
    }

    for (int i = 0; i < n; ++i) {
        bool allZero = 1;
        for (int j = 0; j < m; ++j)
            if (A[i][j]) { allZero = 0; break; }
        if (allZero && b[i]) return 0;
    }
    return true;
}